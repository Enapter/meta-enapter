# SPDX-FileCopyrightText: 2023 Enapter <developers@enapter.com>
# SPDX-License-Identifier: Apache-2.0

if loadfont /EFI/BOOT/unicode.pf2 ; then
  insmod all_video
  insmod gfxterm
  terminal_output gfxterm
fi

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray

set default=0
set fallback=1
set timeout=2


if [ -s $prefix/grubenv ]; then
  load_env
  insmod increment

  if [ "${boot_success}" == "-1" ]; then
    set boot_success=0
    save_env boot_success
  fi

  # Check if enapter_systemd_machine_id is set
  if [ -n "${enapter_systemd_machine_id}" ]; then
    set systemd_bootargs="systemd.machine_id=${enapter_systemd_machine_id}"
  fi

   # Check if boot_counter exists and boot_success=0 to activate this behaviour.
  if [ -n "${boot_counter}" -a "${boot_success}" == "0" ]; then
    # if countdown has ended, choose to boot rollback deployment,
    # i.e. default=1
    if  [ "${boot_counter}" == "0" -o "${boot_counter}" == "-1" ]; then
      set default=1
      set boot_counter=-1
    else
      # otherwise decrement boot_counter
      decrement boot_counter
    fi

    save_env boot_counter
  fi
fi

probe --fs-uuid --set=boot_fs_uuid $root

set common_params="root=UUID=${boot_fs_uuid} panic=20 ${systemd_bootargs}"
export common_params

menuentry 'Enapter Linux' {
echo 'Loading Linux Kernel ...'
linux /EFI/enapter/bzImage $common_params
echo 'Loading initial ramdisk ...'
initrd /EFI/enapter/initrd.img
}

menuentry 'Enapter Linux (backup)' {
kernel_path=/EFI/enapter/bzImage
if [ -s /EFI/enapter/bzImage.backup ]; then
  kernel_path=/EFI/enapter/bzImage.backup
fi
echo "Loading $kernel_path ..."
linux $kernel_path $common_params nomodeset usebackup

initrd_path=/EFI/enapter/initrd.img
if [ -s /EFI/enapter/initrd.img.backup ]; then
  initrd_path=/EFI/enapter/initrd.img.backup
fi
echo "Loading $initrd_path ..."
initrd $initrd_path
}

menuentry 'UEFI Firmware Settings' {
fwsetup
}

submenu 'Advanced options for Enapter Linux' {

menuentry 'Enapter Linux (safe graphics)' {
echo 'Loading Linux Kernel ...'
linux /EFI/enapter/bzImage $common_params nomodeset
echo 'Loading initial ramdisk ...'
initrd /EFI/enapter/initrd.img
}

menuentry 'Enapter Linux (initrd debug)' {
echo 'Loading Linux Kernel ...'
linux /EFI/enapter/bzImage $common_params init_fatal_sh=true verbose=true debug=true shell-debug
echo 'Loading initial ramdisk ...'
initrd /EFI/enapter/initrd.img
}

menuentry 'Enapter Linux (initrd shell)' {
echo 'Loading Linux Kernel ...'
linux /EFI/enapter/bzImage $common_params shell=after:udev init_fatal_sh=true
echo 'Loading initial ramdisk ...'
initrd /EFI/enapter/initrd.img
}

}
